name: CI
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}
jobs:
  commit:
    name: Commits
    if: ${{ github.ref != 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: JohnnyMorganz/stylua-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: latest
          args: --config-path .stylua.toml ./lua ./spec
      - name: Install commons.nvim
        if: ${{ github.ref != 'refs/heads/main' }}
        run: |
          git clone --depth=1 https://github.com/linrongbin16/commons.nvim.git ~/.commons.nvim
          rm -rf ./lua/colorbox/commons
          cp -rf ~/.commons.nvim/lua/commons ./lua/colorbox/
          cp ~/.commons.nvim/version.txt ./lua/colorbox/commons/version.txt
          find ./lua/colorbox/commons -type f -name '*.lua' -exec sed -i 's/require("commons/require("colorbox.commons/g' {} \;
      # - uses: stevearc/nvim-typecheck-action@v2
      #   with:
      #     path: lua
      #     configpath: ".luarc.json"
      - uses: cargo-bins/cargo-binstall@main
      - name: Selene
        run: |
          cargo binstall --no-confirm selene
          selene --config selene.toml ./lua
      - uses: chartboost/ruff-action@v1
        with:
          src: "./collect.py"
      - uses: stefanzweifel/git-auto-commit-action@v5
        if: ${{ github.ref != 'refs/heads/main' }}
        with:
          commit_message: "chore(pr): auto-commit"
          push_options: "--force"
  unit_test:
    name: Unit Test
    strategy:
      matrix:
        nvim_version: [stable, nightly]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: rhysd/action-setup-vim@v1
        id: vim
        with:
          neovim: true
          version: ${{ matrix.nvim_version }}
      - uses: leafo/gh-actions-lua@v10
        with:
          # luaVersion: "luajit-2.1.0-beta3"
          luaVersion: "luajit-openresty"
      - uses: leafo/gh-actions-luarocks@v4
      - name: Run Tests
        shell: bash
        run: |
          luarocks install luacov
          luarocks install luacov-reporter-lcov
          luarocks --lua-version=5.1 install vusted
          vusted --coverage ./spec
          echo "ls -l ."
          ls -l .
      - name: Generate Coverage Report
        shell: bash
        run: |
          echo "luacov -r lcov"
          luacov -r lcov
          echo "ls -l ."
          ls -l .
          echo "tail ./luacov.report.out"
          tail -n 10 ./luacov.report.out
      - uses: codecov/codecov-action@v4
        with:
          files: luacov.report.out
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  release:
    name: Release
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - unit_test
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: simple
          package-name: colorbox.nvim
      - uses: actions/checkout@v4
      - uses: nvim-neorocks/luarocks-tag-release@v5
        if: ${{ steps.release.outputs.release_created }}
        env:
          LUAROCKS_API_KEY: ${{ secrets.LUAROCKS_API_KEY }}
        with:
          version: ${{ steps.release.outputs.tag_name }}
          labels: |
            vim
            neovim
